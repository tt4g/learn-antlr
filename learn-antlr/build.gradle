plugins {
    id "java-library"

    id "antlr"

    id "com.github.spotbugs"
}

apply(from: rootProject.file("gradle/versions.gradle"))
apply(from: rootProject.file("gradle/slf4j-setup.gradle"))

dependencies {
    antlr("org.antlr:antlr4:${versions.antlrVersion}")

    implementation("org.slf4j:slf4j-api:${versions.slf4jVersion}")
    implementation("ch.qos.logback:logback-classic:${versions.logbackVersion}")

    testImplementation(platform("org.junit:junit-bom:${versions.junitVersion}"))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    testImplementation("org.mockito:mockito-core:${versions.mockitoVersion}")
    testImplementation("org.mockito:mockito-junit-jupiter:${versions.mockitoVersion}")

    testImplementation("org.assertj:assertj-core:${versions.assertjVersion}")
}

tasks.named("test") {
    useJUnitPlatform()
}

tasks.named("generateGrammarSource") {
    // Add a path to the `-lib` option to allow `import` of the same path in
    // grammar file ('.g4').
    arguments += ["-lib", "src/main/antlr/com/github/tt4g/learn/antlr"]
    // Exclude `*TokenLexer.g4` that is token definition only.
    excludes += "**/*TokenLexer.g4"
}
